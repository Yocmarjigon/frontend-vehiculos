import { ErrorTailorConfig } from './providers';
import * as i0 from "@angular/core";
import * as i1 from "./control-error.directive";
import * as i2 from "./control-error-anchor.directive";
import * as i3 from "./control-error.component";
import * as i4 from "./form-action.directive";
export declare class errorTailorImports {
    static ɵfac: i0.ɵɵFactoryDeclaration<errorTailorImports, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<errorTailorImports, never, [typeof i1.ControlErrorsDirective, typeof i2.ControlErrorAnchorDirective, typeof i3.DefaultControlErrorComponent, typeof i4.FormActionDirective], [typeof i1.ControlErrorsDirective, typeof i2.ControlErrorAnchorDirective, typeof i3.DefaultControlErrorComponent, typeof i4.FormActionDirective]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<errorTailorImports>;
}
export declare function provideErrorTailorConfig(config: ErrorTailorConfig): ({
    provide: import("@angular/core").InjectionToken<ErrorTailorConfig>;
    useValue: ErrorTailorConfig;
} | {
    useValue: import("./types").ErrorsMap;
    provide: import("@angular/core").InjectionToken<{}>;
} | {
    useFactory: (...args: any[]) => import("./types").ErrorsMap;
    deps?: any[];
    provide: import("@angular/core").InjectionToken<{}>;
    useValue?: undefined;
})[];
