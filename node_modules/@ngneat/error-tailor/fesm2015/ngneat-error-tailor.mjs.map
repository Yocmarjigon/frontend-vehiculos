{"version":3,"file":"ngneat-error-tailor.mjs","sources":["../../../../projects/ngneat/error-tailor/src/lib/control-error-anchor.directive.ts","../../../../projects/ngneat/error-tailor/src/lib/control-error.component.ts","../../../../projects/ngneat/error-tailor/src/lib/providers.ts","../../../../projects/ngneat/error-tailor/src/lib/form-action.directive.ts","../../../../projects/ngneat/error-tailor/src/lib/control-error.directive.ts","../../../../projects/ngneat/error-tailor/src/lib/error-tailor.providers.ts","../../../../projects/ngneat/error-tailor/src/public-api.ts","../../../../projects/ngneat/error-tailor/src/ngneat-error-tailor.ts"],"sourcesContent":["import { Directive, inject, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[controlErrorAnchor]',\n  standalone: true,\n  exportAs: 'controlErrorAnchor'\n})\nexport class ControlErrorAnchorDirective {\n  vcr = inject(ViewContainerRef);\n}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, TemplateRef } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\nexport type ErrorComponentTemplate = TemplateRef<{ $implicit: ValidationErrors; text: string }>;\n\nexport interface ControlErrorComponent {\n  customClass: string | string[];\n  text: string | null;\n  createTemplate?(tpl: ErrorComponentTemplate, error: ValidationErrors, text: string): void;\n}\n\n@Component({\n  selector: 'control-error',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <label class=\"control-error\" [class.hide-control]=\"hideError\" *ngIf=\"!errorTemplate\">{{ errorText }}</label>\n    <ng-template *ngTemplateOutlet=\"errorTemplate; context: errorContext\"></ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      .hide-control {\n        display: none !important;\n      }\n\n      :host {\n        display: block;\n      }\n    `\n  ]\n})\nexport class DefaultControlErrorComponent implements ControlErrorComponent {\n  errorText: string | null = null;\n  errorTemplate: ErrorComponentTemplate | undefined;\n  errorContext: { $implicit: ValidationErrors; text: string };\n  hideError = true;\n\n  private _addClasses: string[] = [];\n\n  createTemplate(tpl: ErrorComponentTemplate, error: ValidationErrors, text: string) {\n    this.errorTemplate = tpl;\n    this.errorContext = { $implicit: error, text };\n    this.cdr.markForCheck();\n  }\n\n  set customClass(classes: string | string[]) {\n    if (!this.hideError) {\n      this._addClasses = Array.isArray(classes) ? classes : classes.split(/\\s/);\n      this.host.nativeElement.classList.add(...this._addClasses);\n    }\n  }\n\n  set text(value: string | null) {\n    if (value !== this.errorText) {\n      this.errorText = value;\n      this.hideError = !value;\n      if (this.hideError) {\n        this.host.nativeElement.classList.remove(...this._addClasses);\n      }\n      this.cdr.markForCheck();\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private host: ElementRef<HTMLElement>) {}\n}\n","import { InjectionToken, ValueSansProvider, FactorySansProvider, Type } from '@angular/core';\nimport { ErrorsMap } from './types';\nimport { ControlErrorComponent } from './control-error.component';\n\nexport const FORM_ERRORS = new InjectionToken('FORM_ERRORS', {\n  providedIn: 'root',\n  factory: () => {\n    return {};\n  }\n});\n\nexport interface ErrorsUseValue extends ValueSansProvider {\n  useValue: ErrorsMap;\n}\n\nexport interface ErrorsUseFactory extends FactorySansProvider {\n  useFactory: (...args: any[]) => ErrorsMap;\n}\n\nexport type ErrorsProvider = ErrorsUseValue | ErrorsUseFactory;\n\nexport type ErrorTailorConfig = {\n  errors?: ErrorsProvider;\n  blurPredicate?: (element: Element) => boolean;\n  controlErrorsClass?: string | string[] | undefined;\n  controlCustomClass?: string | string[] | undefined;\n  controlErrorComponent?: Type<ControlErrorComponent>;\n  controlErrorComponentAnchorFn?: (hostElement: Element, errorElement: Element) => () => void;\n  controlErrorsOn?: {\n    async?: boolean;\n    blur?: boolean;\n    change?: boolean;\n  };\n};\n\nexport const ErrorTailorConfigProvider = new InjectionToken<ErrorTailorConfig>('ErrorTailorConfigProvider');\n","import { Directive, ElementRef } from '@angular/core';\nimport { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n@Directive({\n  standalone: true,\n  selector: 'form[errorTailor]'\n})\nexport class FormActionDirective {\n  submit$: Observable<Event> = fromEvent(this.element, 'submit').pipe(\n    tap(() => {\n      if (this.element.classList.contains('form-submitted') === false) {\n        this.element.classList.add('form-submitted');\n      }\n    }),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  reset$: Observable<Event> = fromEvent(this.element, 'reset').pipe(\n    tap(() => {\n      this.element.classList.remove('form-submitted');\n    }),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  constructor(private host: ElementRef<HTMLFormElement>) {}\n\n  get element() {\n    return this.host.nativeElement;\n  }\n}\n","import {\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Self,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, NgControl, ValidationErrors } from '@angular/forms';\nimport { EMPTY, fromEvent, merge, NEVER, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, mapTo, startWith, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { ControlErrorAnchorDirective } from './control-error-anchor.directive';\nimport { ControlErrorComponent, DefaultControlErrorComponent } from './control-error.component';\nimport { FormActionDirective } from './form-action.directive';\nimport { ErrorTailorConfig, ErrorTailorConfigProvider, FORM_ERRORS } from './providers';\nimport { ErrorsMap } from './types';\n\n@Directive({\n  standalone: true,\n  selector:\n    '[formControlName]:not([controlErrorsIgnore]), [formControl]:not([controlErrorsIgnore]), [formGroup]:not([controlErrorsIgnore]), [formGroupName]:not([controlErrorsIgnore]), [formArrayName]:not([controlErrorsIgnore]), [ngModel]:not([controlErrorsIgnore])',\n  exportAs: 'errorTailor'\n})\nexport class ControlErrorsDirective implements OnInit, OnDestroy {\n  @Input('controlErrors') customErrors: ErrorsMap = {};\n  @Input() controlErrorsClass: string | string[] | undefined;\n  @Input() controlCustomClass: string | string[] | undefined;\n  @Input() controlErrorsTpl: TemplateRef<any> | undefined;\n  @Input() controlErrorsOnAsync: boolean | undefined;\n  @Input() controlErrorsOnBlur: boolean | undefined;\n  @Input() controlErrorsOnChange: boolean | undefined;\n  @Input() controlErrorAnchor: ControlErrorAnchorDirective;\n\n  private ref: ComponentRef<ControlErrorComponent>;\n  private anchor: ViewContainerRef;\n  private submit$: Observable<Event>;\n  private reset$: Observable<Event>;\n  private control: AbstractControl;\n  private destroy = new Subject();\n  private showError$ = new Subject();\n  private mergedConfig: ErrorTailorConfig = {};\n  private customAnchorDestroyFn: () => void;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private host: ElementRef,\n    @Inject(ErrorTailorConfigProvider) private config: ErrorTailorConfig,\n    @Inject(FORM_ERRORS) private globalErrors,\n    @Optional() private controlErrorAnchorParent: ControlErrorAnchorDirective,\n    @Optional() private form: FormActionDirective,\n    @Optional() @Self() private ngControl: NgControl,\n    @Optional() @Self() private controlContainer: ControlContainer\n  ) {\n    this.submit$ = this.form ? this.form.submit$ : EMPTY;\n    this.reset$ = this.form ? this.form.reset$ : EMPTY;\n  }\n\n  ngOnInit() {\n    this.mergedConfig = this.buildConfig();\n\n    this.anchor = this.resolveAnchor();\n    this.control = (this.controlContainer || this.ngControl).control;\n    const hasAsyncValidator = !!this.control.asyncValidator;\n\n    const statusChanges$ = this.control.statusChanges.pipe(distinctUntilChanged());\n    const valueChanges$ = this.control.valueChanges;\n    const controlChanges$ = merge(statusChanges$, valueChanges$);\n    let changesOnAsync$: Observable<any> = EMPTY;\n    let changesOnBlur$: Observable<any> = EMPTY;\n    let changesOnChange$: Observable<any> = EMPTY;\n\n    if (!this.controlErrorsClass || this.controlErrorsClass?.length === 0) {\n      if (this.mergedConfig.controlErrorsClass && this.mergedConfig.controlErrorsClass) {\n        this.controlErrorsClass = this.mergedConfig.controlErrorsClass;\n      }\n    }\n\n    if (!this.controlCustomClass || this.controlCustomClass?.length === 0) {\n      if (this.mergedConfig.controlCustomClass && this.mergedConfig.controlCustomClass) {\n        this.controlCustomClass = this.mergedConfig.controlCustomClass;\n      }\n    }\n\n    if (this.mergedConfig.controlErrorsOn.async && hasAsyncValidator) {\n      // hasAsyncThenUponStatusChange\n      changesOnAsync$ = statusChanges$;\n    }\n\n    if (this.isInput && this.mergedConfig.controlErrorsOn.change) {\n      // on each change\n      changesOnChange$ = valueChanges$;\n    }\n\n    if (this.isInput && this.mergedConfig.controlErrorsOn.blur) {\n      const blur$ = fromEvent(this.host.nativeElement, 'focusout');\n      // blurFirstThenUponChange\n      changesOnBlur$ = blur$.pipe(switchMap(() => valueChanges$.pipe(startWith(true))));\n    }\n\n    const submit$ = merge(this.submit$.pipe(mapTo(true)), this.reset$.pipe(mapTo(false)));\n\n    // when submitted, submitFirstThenUponChanges\n    const changesOnSubmit$ = submit$.pipe(\n      switchMap(submit => (submit ? controlChanges$.pipe(startWith(true)) : NEVER))\n    );\n\n    // on reset, clear ComponentRef and customAnchorDestroyFn\n    this.reset$.pipe(takeUntil(this.destroy)).subscribe(() => this.clearRefs());\n\n    merge(changesOnAsync$, changesOnBlur$, changesOnChange$, changesOnSubmit$, this.showError$)\n      .pipe(takeUntil(this.destroy))\n      .subscribe(() => this.valueChanges());\n  }\n\n  private setError(text: string, error?: ValidationErrors) {\n    if (!this.ref) {\n      this.ref = this.anchor.createComponent<ControlErrorComponent>(this.mergedConfig.controlErrorComponent);\n    }\n    const instance = this.ref.instance;\n\n    if (this.controlErrorsTpl) {\n      instance.createTemplate(this.controlErrorsTpl, error, text);\n    } else {\n      instance.text = text;\n    }\n\n    if (this.controlErrorsClass) {\n      instance.customClass = this.controlErrorsClass;\n    }\n\n    if (!this.controlErrorAnchor && this.mergedConfig.controlErrorComponentAnchorFn) {\n      this.customAnchorDestroyFn = this.mergedConfig.controlErrorComponentAnchorFn(\n        this.host.nativeElement as HTMLElement,\n        (this.ref.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement\n      );\n    }\n  }\n\n  /**\n   * Explicit showing of a control error via some custom application code.\n   */\n  showError(): void {\n    this.showError$.next();\n  }\n\n  /**\n   * Explicit hiding of a control error via some custom application code.\n   */\n  hideError(): void {\n    this.setError(null);\n  }\n\n  ngOnDestroy() {\n    this.destroy.next();\n    this.clearRefs();\n  }\n\n  private get isInput() {\n    return this.mergedConfig.blurPredicate(this.host.nativeElement);\n  }\n\n  private clearRefs(): void {\n    if (this.customAnchorDestroyFn) {\n      this.customAnchorDestroyFn();\n      this.customAnchorDestroyFn = null;\n    }\n    if (this.ref) {\n      this.ref.destroy();\n    }\n    this.ref = null;\n  }\n\n  private valueChanges() {\n    const controlErrors = this.control.errors;\n    const classesAdd = Array.isArray(this.controlCustomClass)\n      ? this.controlCustomClass\n      : this.controlCustomClass?.split(/\\s/) ?? [];\n    if (controlErrors) {\n      const [firstKey] = Object.keys(controlErrors);\n      const getError = this.customErrors[firstKey] || this.globalErrors[firstKey];\n      if (!getError) {\n        return;\n      }\n\n      const text = typeof getError === 'function' ? getError(controlErrors[firstKey]) : getError;\n      if (this.isInput) {\n        this.host.nativeElement.parentElement.classList.add('error-tailor-has-error');\n        if (this.controlCustomClass) {\n          (this.host.nativeElement as HTMLElement).classList.add(...classesAdd);\n        }\n      }\n      this.setError(text, controlErrors);\n    } else if (this.ref) {\n      if (this.isInput) {\n        this.host.nativeElement.parentElement.classList.remove('error-tailor-has-error');\n        if (this.controlCustomClass) {\n          (this.host.nativeElement as HTMLElement).classList.remove(...classesAdd);\n        }\n      }\n      this.setError(null);\n    }\n  }\n\n  private resolveAnchor() {\n    if (this.controlErrorAnchor) {\n      return this.controlErrorAnchor.vcr;\n    }\n\n    if (this.controlErrorAnchorParent) {\n      return this.controlErrorAnchorParent.vcr;\n    }\n    return this.vcr;\n  }\n\n  private buildConfig(): ErrorTailorConfig {\n    return {\n      ...{\n        blurPredicate(element) {\n          return element.tagName === 'INPUT' || element.tagName === 'SELECT';\n        },\n        controlErrorComponent: DefaultControlErrorComponent\n      },\n\n      ...this.config,\n\n      controlErrorsOn: {\n        async: this.controlErrorsOnAsync ?? this.config.controlErrorsOn?.async ?? true,\n        blur: this.controlErrorsOnBlur ?? this.config.controlErrorsOn?.blur ?? true,\n        change: this.controlErrorsOnChange ?? this.config.controlErrorsOn?.change ?? false\n      }\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ControlErrorAnchorDirective } from './control-error-anchor.directive';\nimport { DefaultControlErrorComponent } from './control-error.component';\nimport { ControlErrorsDirective } from './control-error.directive';\nimport { FormActionDirective } from './form-action.directive';\nimport { ErrorTailorConfig, ErrorTailorConfigProvider, FORM_ERRORS } from './providers';\n\nconst _errorTailorImports = [\n  ControlErrorsDirective,\n  ControlErrorAnchorDirective,\n  DefaultControlErrorComponent,\n  FormActionDirective\n];\n\n@NgModule({\n  imports: [_errorTailorImports],\n  exports: [_errorTailorImports]\n})\nexport class errorTailorImports {}\n\nexport function provideErrorTailorConfig(config: ErrorTailorConfig) {\n  return [\n    {\n      provide: ErrorTailorConfigProvider,\n      useValue: config\n    },\n    {\n      provide: FORM_ERRORS,\n      ...config.errors\n    }\n  ];\n}\n","/*\n * Public API Surface of error-tailor\n */\n\nexport * from './lib/error-tailor.providers';\nexport * from './lib/control-error.component';\nexport * from './lib/control-error-anchor.directive';\nexport * from './lib/control-error.directive';\nexport * from './lib/form-action.directive';\nexport * from './lib/providers';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ControlErrorAnchorDirective","i2.FormActionDirective"],"mappings":"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"}